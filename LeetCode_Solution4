# Bitwise AND of Numbers Range

# Given two integers left and right that represent the range[left, right], return the bitwise AND of all numbers in this range, inclusive.
# 
# Example 1:
# Input: left = 5, right = 7
# Output: 4
# 
# Example 2:
# Input: left = 0, right = 0
# Output: 0
# 
# Example 3:
# Input: left = 1, right = 2147483647
# Output: 0
# 
# Constraints: 0 <= left <= right <= 231 - 1

def rangeBitwiseAnd(left: int, right: int) -> int:
    """
    Calculate the bitwise AND of all numbers in the range [left, right], inclusive.

    Args:
        left (int): The left bound of the range.
        right (int): The right bound of the range.

    Returns:
        int: The bitwise AND of all numbers in the range [left, right].
    """
    count = 0
    # Find the common MSB (Most Significant Bit) in left and right
    while left != right:
        left >>= 1
        right >>= 1
        count += 1
    # Shift left by count to get the final result
    return left << count

def main():
    # Test cases
    print(rangeBitwiseAnd(5, 7))  # Output: 4
    print(rangeBitwiseAnd(0, 0))  # Output: 0
    print(rangeBitwiseAnd(1, 2147483647))  # Output: 0

if __name__ == "__main__":
    main()
